from datetime import datetime
from config import Config

import disnake
from disnake.ext import commands
from Tools.exceptions import CustomError


class MarryButton(disnake.ui.View):

    def __init__(self, partner: disnake.Member):
        super().__init__()
        self.partner = partner
        self.value = None
        self.config = Config()
    
    @disnake.ui.button(label="–ü—Ä–∏–Ω—è—Ç—å", style=disnake.ButtonStyle.green)
    async def marry_button_accept(self, button, inter):
        if self.partner.id != inter.author.id:
            await inter.response.send_message("–ü—Ä–∏–Ω—è—Ç—å –¥–æ–ª–∂–µ–Ω —Ç–æ—Ç, –∫–æ–≥–æ –≤—ã –ø–æ–ø—Ä–æ—Å–∏–ª–∏!", ephemeral=True)
        else:
            await inter.response.send_message(f'{self.partner.mention} –°–æ–≥–ª–∞—Å–µ–Ω(–Ω–∞) –±—ã—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º {inter.author.mention} üéâ')
            await self.config.DB.marries.insert_one({"_id": inter.author.id, "mate": self.partner.id, 'time': datetime.now()})
            self.stop()

    @disnake.ui.button(label="–û—Ç–∫–∞–∑–∞—Ç—å", style=disnake.ButtonStyle.red)
    async def marry_button_cancel(self, button, inter):
        if self.partner.id != inter.author.id:
            await inter.response.send_message("–ù–∞–∂–∞—Ç—å –¥–æ–ª–∂–µ–Ω(–Ω–∞) —Ç–æ—Ç, –∫–æ–≥–æ –≤—ã –ø–æ–ø—Ä–æ—Å–∏–ª–∏!", ephemeral=True)
        else:
            await inter.response.send_message(f'{self.partner.mention} –ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω(–Ω–∞) –±—ã—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º {inter.author.mention}')
            self.stop()

class Marries(commands.Cog):

    def __init__(self, bot):
        self.bot = bot

    async def is_married(self, author: disnake.Member):
        if await self.bot.config.db.marry.count_documents({'$or': [{'first': author.id}, {'member': author.id}]}):
            return True
        else:
            return False

    @commands.slash_command(name='marry', description="–°–≤–∞–¥—å–±—ã")
    async def marry_cmd(self, inter):
        ...

    @marry_cmd.sub_command(name="invite", description="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å—ã–≥—Ä–∞—Ç—å —Å–≤–∞–¥—å–±—É –∫–æ–º—É-–ª–∏–±–æ")
    async def marry_invite(self, inter, member: disnake.Member):
        if await self.is_married(inter.author, member):
            view = MarryButton(partner=member)
            await inter.send(
                embed=await self.bot.embeds.simple(
                    title="–°–≤–∞–¥—å–±–∞, –ø–æ–ª—É—á–∞–µ—Ç—Å—è <3", 
                    description=f"{inter.author.mention} –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç {member.mention} —Å—ã–≥—Ä–∞—Ç—å —Å–≤–∞–¥—å–±—É. –ú–º–º...)",
                    footer={"text": "–¢–æ–ª—å–∫–æ, –¥–∞–≤–∞–π—Ç–µ, –±–µ–∑ –±–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤ 16, —Ö–æ—Ä–æ—à–æ?", 'icon_url': inter.author.display_avatar.url}
                ), view=view
            )
        else:
            raise CustomError(f"–≠–º) –í—ã –∏/–∏–ª–∏ {member.mention} –∂–µ–Ω–∞—Ç—ã. –ù–∞ —á—Ç–æ –≤—ã –Ω–∞–¥–µ–µ—Ç–µ—Å—å?")

    @marry_cmd.sub_command(name='divorce', description="–†–∞–∑–≤–æ–¥ —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º")
    async def marry_divorce(self, inter):
        ...

def setup(bot):
    bot.add_cog(Marries(bot))
