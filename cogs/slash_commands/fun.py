from io import BytesIO
from PIL import Image
from random import randint, choice

import disnake
from disnake.ext import commands

from Tools.exceptions import CustomError
from Tools.images import ship_image
from services import waifu_pics


OVERLAY_DESCRIPTIONS = {
    'jail': '{user} –ó–∞ —à–æ —Å–∏–¥–∏–º?',
    'wasted': 'R.I.P. {user} –ø–æ–≥–∏–±(-–ª–∞) —Å–º—Ä–µ—Ç—å—é —Ö—Ä–∞–±—Ä—ã—Ö :D',
    'gay': 'ü§≠',
    'triggered': '–í–´–ê–´–í–û–ê–´–ê–û–´–í–ê–´–í–ê–†–´–†–ê–í–´–†–ê–õ–û'
}


class FunSlashCommands(commands.Cog):

    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command(
        options=[
            disnake.Option(name='a', type=disnake.OptionType.integer, description='–ß–∏—Å–ª–æ –æ—Ç:'),
            disnake.Option(name='b', type=disnake.OptionType.integer, description='–ß–∏—Å–ª–æ –¥–æ:')
        ],
        description='–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ'
    )
    async def random(self, inter: disnake.ApplicationCommandInteraction, a: int, b: int):
        if b < a or a == b:
            raise CustomError('–í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–≤–Ω–æ –ø–µ—Ä–≤–æ–º—É –ª–∏–±–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ —á–µ–º –æ–Ω–æ owo') # –Ø –º–∞—Å—Ç–µ—Ä –æ–±—ä—è–Ω—Å—è—Ç—å
        embed = await self.bot.embeds.simple(inter, title=f'–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç `{a}` –¥–æ `{b}`', thumbnail=inter.author.avatar.url)
        embed.add_field(name='–í–∞—à–µ —á–∏—Å–ª–æ...', value=randint(a, b))
        return await inter.send(embed=embed)

    @commands.slash_command(
        options=[
            disnake.Option(
                'overlay', '–≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ', 
                type=disnake.OptionType.string,
                required=True, 
                choices=['wasted', 'jail', 'comrade', 'gay', 'glass', 'passed', 'triggered']
            ),
            disnake.Option('user', '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', type=disnake.OptionType.user, required=False)
        ],
        name='avatar-overlay',
        description="–ù–∞–∫–ª–∞–¥—ã–≤–∞–µ—Ç —Ä–∞–∑–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –Ω–∞ –∞–≤–∞—Ç–∞—Ä."
    )
    async def jail_image(self, inter: disnake.ApplicationCommandInteraction, overlay: str, user: disnake.User = commands.Param(lambda inter: inter.author)):
        async with self.bot.session.get(f'https://some-random-api.ml/canvas/{overlay}?avatar={user.display_avatar.url}') as response:
            image_bytes = BytesIO(await response.read())
            image_filename = f'overlay.{"png" if overlay != "triggered" else "gif"}'
            embed = await self.bot.embeds.simple(inter, title=OVERLAY_DESCRIPTIONS.get(overlay, f'`{user}`'), image=f'attachment://{image_filename}')
            await inter.send(embed=embed, file=disnake.File(image_bytes, filename=image_filename))
            return await response.close()

    @commands.slash_command(
        options=[
            disnake.Option(
                'choice', '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–≤–ê—Ç–¨–∫—É owo', 
                type=disnake.OptionType.string,
                required=True, 
                choices=['megumin', 'shinobu', 'awoo', 'neko', 'poke']
            )
        ],
        name='anime-girl',
        description="–ê–Ω–∏–º–µ —Ç—è–Ω–∫–∏"
    )
    async def anime_girl(self, inter: disnake.ApplicationCommandInteraction, choice: str):
        embed = await self.bot.embeds.simple(inter, title=f'{choice.title()} OwO', image=await waifu_pics.get_image('sfw', choice.lower()))
        return await inter.send(embed=embed)

    @commands.slash_command(name="ship", description="–°–æ–∑–¥–∞–Ω–∏–µ —à–∏–ø-–∫–∞—Ä—Ç–∏–Ω–∫–∏")
    async def ship_not_ship(
        self, 
        inter, 
        user_one: disnake.User = commands.Param(
            default=lambda inter: inter.author,
            description="–ü–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        ),
        second_user: disnake.User = commands.Param(
            default=lambda inter: choice(inter.guild.members),
            description="–í—Ç–æ—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        )
    ):
        percentage = randint(1, 100)
        get_image = ship_image(percentage, user_one, second_user)

        await inter.send(
            embed=await self.bot.embeds.simple(
                title=f'*–¢–æ–ª–∫–Ω—É–ª–∞ {user_one.name} –Ω–∞ {second_user.name}* <:awww:878155710796550145>' if percentage > 30 else '–•—Ä—É—Å—å üíî',
                image='attachment://ship_img.png'
            )
        )

def setup(bot):
    bot.add_cog(FunSlashCommands(bot))
