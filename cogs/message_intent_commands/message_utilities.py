import platform
import sys
import re
from typing import Union
import random
from datetime import datetime

import disnake
import psutil
from disnake.ext import commands
from Tools.exceptions import CustomError


class MessageUtilities(commands.Cog, name='—É—Ç–∏–ª–∏—Ç—ã', description="–í—Å—è–∫–∏–µ –Ω–µ–Ω—É–∂–Ω—ã–µ, –∞ –º–æ–∂–µ—Ç –±—ã—Ç—å, –∏, –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"):

    def __init__(self, bot):
        self.bot = bot

    COG_EMOJI = 'üîß'

    @commands.command(name="afk", description="–í—Å—Ç–∞–ª–∏ –≤ –∞—Ñ–∫? –ù—É –ª–∞–¥–Ω–æ, –ø–æ–¥–æ–∂–¥—ë–º.", usage='afk [–ü—Ä–∏—á–∏–Ω–∞]')
    async def message_utilities_afk_command(self, inter, *, reason: str = None):
        if await self.bot.config.DB.afk.count_documents({"guild": inter.guild.id, "member": inter.author.id}) == 0:
            await self.bot.config.DB.afk.insert_one({"guild": inter.guild.id, "member": inter.author.id,
                                                     "reason": reason if reason else "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã",
                                                     "time": datetime.now()})

        await inter.send(
            embed=await self.bot.embeds.simple(
                description=f"–Ø –ø–æ—Å—Ç–∞–≤–∏–ª–∞ –≤–∞—Å –≤ —Å–ø–∏—Å–æ–∫ AFK, –∂–¥—ë–º –≤–∞—à–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è :relaxed:\n–ü—Ä–∏—á–∏–Ω–∞: {reason if reason else '–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã'}"
            )
        )

    @commands.command(name="stats", description="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞")
    async def message_utilities_stats(self, ctx):
        shard_names = {
            '0': '–°—Ç–µ–ª–ª–∞',
            '1': '–ö—Ä–∏—Å—Ç–∏–Ω–∞',
            '2': '–í–∏–∫—Ç–æ—Ä–∏—è',
            '3': '–ö–ª—ç—Ä'
        }
        guilds_info = (
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: **{len(self.bot.guilds)}**",
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: **{len(self.bot.users)}**",
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∏–∫–µ—Ä–æ–≤: **{len(self.bot.stickers)}**",
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–º–æ–¥–∑–∏: **{len(self.bot.emojis)}**",
        )
        about_me_info = (
            f"–Ø —Å–æ–∑–¥–∞–Ω–∞: **13 –∏—é–ª—è, 2021 –≥–æ–¥–∞.**",
            f"[–ú–æ–π —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏](https://discord.gg/43zapTjgvm)",
            f"–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: **{platform.platform()}**",
            f"–Ø–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è: **Python {sys.version}**"
        )
        other_info = (
            f"–ú–æ–π ID: **{ctx.me.id}**",
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª—ç—à –∫–æ–º–∞–Ω–¥: **{len(self.bot.global_slash_commands)}**",
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ã—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥: **{len([i for i in self.bot.commands if not i.name == 'jishaku' and not i.name == 'justify'])}**",
            f"–ó–∞–¥–µ—Ä–∂–∫–∞: **{round(self.bot.latency*1000, 2)}ms**",
            f"RAM: **{psutil.virtual_memory().percent}%**",
            f"CPU: **{psutil.Process().cpu_percent()}%**",
            f"–ö–ª–∞—Å—Ç–µ—Ä–æ–≤: **{len(self.bot.shards)}**",
        )
        embed = await self.bot.embeds.simple(
            title=f"–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–æ –º–Ω–µ | –ö–ª–∞—Å—Ç–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞: {shard_names[str(ctx.guild.shard_id)]}",
            description=f"–í—Ä–µ–º—è, —Å–∫–æ–ª—å–∫–æ —è —Ä–∞–±–æ—Ç–∞—é - <t:{round(self.bot.uptime.timestamp())}:R> - ||—Å–ø–∞—Å–∏—Ç–µ... ***–º–æ—Ä–≥–Ω—É–ª–∞ 3 —Ä–∞–∑–∞***||",
            url="https://leylabot.ml/",
            fields=[
                {"name": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–∞—Ö", "value": '\n'.join(guilds_info), "inline": True},
                {"name": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –º–µ–Ω—è", "value": '\n'.join(about_me_info), "inline": True},
                {"name": "–í—Å—ë –ø—Ä–æ—á–µ–µ", "value": '\n'.join(other_info), "inline": True}
            ],
            footer={"text": f"–ú–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏: {', '.join([str(self.bot.get_user(i)) for i in self.bot.owner_ids])}", "icon_url": ctx.me.avatar.url}
        )

        await ctx.reply(embed=embed)
        

    @commands.group(name="profile", description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å –≤–æ –º–Ω–µ, –∫–∞–∫ –±—ã —Å—Ç—Ä–∞–Ω–Ω–æ —ç—Ç–æ –Ω–µ –∑–≤—É—á–∞–ª–æ", invoke_without_command=True, usage="profile <–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>")
    async def message_utilities_profile(self, ctx, user: disnake.User = None):
        user = ctx.author if not user else user

        if await self.bot.config.DB.badges.count_documents({"_id": user.id}) > 0:
            badge_data = ' '.join(dict(await self.bot.config.DB.badges.find_one({"_id": user.id}))['badges'])
        else:
            badge_data = '–ó–Ω–∞—á–∫–æ–≤ –Ω–µ—Ç'
        
        level_data = await self.bot.config.DB.levels.find_one({"guild": ctx.guild.id})
        level_info = (
            f'–£—Ä–æ–≤–µ–Ω—å: **{level_data["lvl"]}**',
            f'–û–ø—ã—Ç: **{level_data["xp"]} / {5*(level_data["lvl"]**2)+50*level_data["lvl"]+100}**'
        )

        fields = [
            {'name': '–ó–Ω–∞—á–∫–∏', 'value': badge_data, "inline": True},
            {'name': '–£—Ä–æ–≤–Ω–∏', 'value': '\n'.join(level_info), "inline": True}
        ]
        embed = await self.bot.embeds.simple(
            title=f'–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}',
            description=f"–°—Ç–∞—Ç—É—Å **{user.name}** –≤ –±–æ—Ç–µ: {'–ü—Ä–æ—Å—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' if not user.id in self.bot.owner_ids else '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'}",
            fields=fields
        )

        await ctx.send(embed=embed)

    @commands.command(name='joke', description='–ù–µ —Å–º–µ—à–Ω–æ. –ù–µ —Å–º–µ—ë–º—Å—è')
    async def message_utilities_joke(self, ctx):
        response = await self.bot.session.get(f'https://millionstatusov.ru/umor/page-{random.randint(1, 523)}.html')
        data = await response.read()

        data = data.decode('utf-8')
        quote = random.choice([i.strip() for i in re.findall(r'(?s)class="(?:t0|cont_text)">(.*?)<', data)])

        await ctx.reply(quote)

    @commands.command(
        name="idea", 
        description="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–¥—ë—Ç –Ω–∞ [—Å–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏](https://discord.gg/43zapTjgvm)",
        usage="idea <–°–∞–º–æ —Å–æ–æ–±—â–µ–Ω–∏–µ>"
    )
    async def message_utilities_idea(self, ctx, *, text: str):
        channel = self.bot.get_channel(864408517237800980)
        message = await channel.send(f'–ü—Ä–∏—à–ª–∞ –Ω–æ–≤–∞—è –∏–¥–µ—è –æ—Ç: **{ctx.author.name}**\n–° —Å–µ—Ä–≤–µ—Ä–∞: **{ctx.guild.name}**\n\n–°–∞–º–∞ –∏–¥–µ—è: {text}')
        await message.add_reaction('üëç')
        await message.add_reaction('üëé')
        channel: disnake.TextChannel = channel.history() 


def setup(bot):
    bot.add_cog(MessageUtilities(bot))
